name: SonarQube analysis

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=./ --cov-report=xml

      - name: Analyze with SonarQube

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository[...]
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository[...]
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            -Dsonar.projectKey=core
            -Dsonar.projectName=Core
            -Dsonar.projectVersion=0.1
            -Dsonar.sources=.
            -Dsonar.exclusions=tests/**
            -Dsonar.python.version=3.12
            -Dsonar.scm.provider=git
            -Dsonar.qualitygate.wait=true
            -Dsonar.language=py
            -Dsonar.core.codeCoveragePlugin=cobertura
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.verbose=true
            -Dsonar.tests=tests
            -Dsonar.test.inclusions=tests/**/*.py
